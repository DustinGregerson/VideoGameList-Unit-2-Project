@model videoGame
@{
    String title = ViewBag.Action + " Vidieo Game";
    ViewBag.Title = title;
}
<!--
Author Dustin Gregerson
Date 10/15/2023
Description:
the user is directed to this page through the VideoGame Controller
the user could have clicked on add or edit

the difference is that the id of the model collected from the index page will have an id that is in the database
or one that is not in the database index zero

if the id returned is in the database
the input fields will be filled out and the new data entered will alter the record.

if the id returned is 0 the controller will enter a new record into the database with the information
provided in the input fields.

-->

<h2>@ViewBag.Title</h2>
<form asp-action="Edit" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="mb-3">
        <label asp-for="name">Name of Game</label>
        <input asp-for="name" class="form-control">
    </div>

    <div class="mb-3">
        <label asp-for="favoriteCharacter">Favorite Character</label>
        <input asp-for="favoriteCharacter" class="form-control">

    </div>

    <div class="mb-3">
        <label asp-for="wouldPlayAgain">Would you play it again?</label>
        <select asp-for="wouldPlayAgain" class="form-select" multiple>
            <option value="true">Yes</option>
            <option value="false">No</option>
            <option value="@DBNull.Value">Maybe</option>
        </select>
    </div>

    <input type="hidden" asp-for="videoGameId" />
    

    <button type="submit" class="btn btn-success">@ViewBag.Action</button>
    <a asp-controller="Home" asp-action="Index"
       class="btn btn-danger">Cancel</a>
</form>
